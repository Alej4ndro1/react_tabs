{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","switchTabs","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAAAH,GACP,OACE,oBACEE,UAAWE,IACT,CAAE,YAAaN,EAAYG,KAAOD,EAAIC,KAExC,UAAQ,MAJV,SAME,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAtBR,SAACN,GACdH,IAAkBG,EAAIC,IACxBL,EAAcI,GAoBeO,CAAWP,IAH5B,SAKGA,EAAIQ,iBASnB,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC3CRd,EAAkB,CAC7B,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOJ,EAAP,KAAsBe,EAAtB,KACMd,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAMvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYU,SAElC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAXgB,SAACI,GACrBY,EAAiBZ,EAAIC,KAWjBJ,cAAeA,QC1BvBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.07a114d7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { TabType } from '../../types/TabType';\n\ninterface Props {\n  tabs: TabType[],\n  onTabSelected: (tab: TabType) => void,\n  selectedTabId: string,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const switchTabs = (tab: TabType) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => {\n              return (\n                <li\n                  className={classNames(\n                    { 'is-active': selectedTab.id === tab.id },\n                  )}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${tab.id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => switchTabs(tab)}\n                  >\n                    {tab.title}\n                  </a>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { TabType } from './types/TabType';\n\nexport const tabs: TabType[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const onTabSelected = (tab: TabType) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}